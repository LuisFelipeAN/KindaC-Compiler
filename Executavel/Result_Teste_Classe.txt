CLASSE
ID.No
CHAVE_ESQ
PUBLICO
DOIS_PONTOS
ID.no
ASTERISCO
ID.prox
PONTO_VIRGULA
INTEIRO
ID.info
PONTO_VIRGULA
CHAVE_DIR
PONTO_VIRGULA
INTEIRO
ID.main
PARENTESE_ESQ
PARENTESE_DIR
CHAVE_ESQ
ID.No
ASTERISCO
ID.primeiro
ATRIBUICAO
NOVO
ID.No
PARENTESE_ESQ
PARENTESE_DIR
PONTO_VIRGULA
ID.No
ASTERISCO
ID.segundo
ATRIBUICAO
NOVO
ID.No
PARENTESE_ESQ
PARENTESE_DIR
PONTO_VIRGULA
ID.primeiro
PONTEIRO
ID.info
ATRIBUICAO
NUM_INTEIRO.0
PONTO_VIRGULA
ID.primeiro
PONTEIRO
ID.prox
ATRIBUICAO
ID.segundo
PONTO_VIRGULA
ID.segundo
PONTEIRO
ID.info
ATRIBUICAO
NUM_INTEIRO.1
PONTO_VIRGULA
ID.delete
ID.primeiro
PONTO_VIRGULA
ID.delete
ID.segundo
PONTO_VIRGULA
RETORNA
NUM_INTEIRO.0
PONTO_VIRGULA
CHAVE_DIR
EOF
---------------------------------------
          TABELA DE LITERAIS           
---------------------------------------
---------------------------------------
       TABELA DE IDENTIFICADORES       
---------------------------------------
No
delete
info
main
no
primeiro
prox
segundo
---------------------------------------
           TABELA DE INTEIROS          
---------------------------------------
0
1
---------------------------------------
           TABELA DE REAIS             
---------------------------------------
---------------------------------------
     TABELA DE PALAVRAS RESERVADAS     
---------------------------------------
LEXEMA                   Token numerico
bool                      8
break                     14
case                      21
catch                     20
char                      9
class                     3
else                      11
false                     24
float                     7
if                        10
int                       6
new                       22
print                     15
private                   5
public                    4
readln                    16
return                    17
struct                    2
switch                    13
this                      25
throw                     18
true                      23
try                       19
typedef                   1
while                     12
